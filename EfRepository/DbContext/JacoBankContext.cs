// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace EfRepository.DbEntity;

public partial class JacoBankContext : DbContext
{
    public JacoBankContext(DbContextOptions<JacoBankContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CustomerBankInfo> CustomerBankInfos { get; set; }

    public virtual DbSet<CustomerInfo> CustomerInfos { get; set; }

    public virtual DbSet<CustomerTransInfo> CustomerTransInfos { get; set; }

    public virtual DbSet<SysAdmin> SysAdmins { get; set; }
    public virtual DbSet<PasswordHistory> PasswordHistories { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CustomerBankInfo>(entity =>
        {
            entity.HasKey(e => e.BankInfoId).HasName("PK__Customer__6E55690627AE3444");

            entity.ToTable("CustomerBankInfo");

            entity.Property(e => e.AccountNumber).HasMaxLength(30);
            entity.Property(e => e.Balance).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.BankName).HasMaxLength(100);
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Currency).HasMaxLength(10);

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerBankInfos)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__CustomerB__Custo__3F466844");
        });

        modelBuilder.Entity<CustomerInfo>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64D824CF0D44");

            entity.ToTable("CustomerInfo");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.Password).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(20);
        });

        modelBuilder.Entity<CustomerTransInfo>(entity =>
        {
            entity.HasKey(e => e.TransId).HasName("PK__Customer__9E5DDB3CCAAAB636");

            entity.ToTable("CustomerTransInfo");

            entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.TransDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TransType).HasMaxLength(20);

            entity.HasOne(d => d.BankInfo).WithMany(p => p.CustomerTransInfos)
                .HasForeignKey(d => d.BankInfoId)
                .HasConstraintName("FK__CustomerT__BankI__440B1D61");

            entity.HasOne(d => d.Customer).WithMany(p => p.CustomerTransInfos)
                .HasForeignKey(d => d.CustomerId)
                .HasConstraintName("FK__CustomerT__Custo__4316F928");
        });

        modelBuilder.Entity<SysAdmin>(entity =>
        {
            entity.HasKey(e => e.AdminId).HasName("PK__SysAdmin__719FE4887D78B5AB");

            entity.ToTable("SysAdmin");

            entity.HasIndex(e => e.Username, "UQ__SysAdmin__536C85E41D6AA344").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DisplayName).HasMaxLength(100);
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });
        modelBuilder.Entity<PasswordHistory>(entity =>
        {
            entity.HasKey(e => e.Id);

            entity.ToTable("PasswordHistory");

            entity.Property(e => e.HashedPassword)
                .IsRequired()
                .HasMaxLength(255);

            entity.Property(e => e.ChangedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne<CustomerInfo>()  // 設定外鍵關聯（可選）
                .WithMany()
                .HasForeignKey(e => e.CustomerId)
                .HasConstraintName("FK_PasswordHistory_CustomerInfo");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}